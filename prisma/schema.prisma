// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Tenant {
  id          String   @id @default(cuid())
  name        String
  slug        String   @unique
  domain      String?  @unique
  settings    Json?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  users       User[]
  customers   Customer[]
  analytics   AnalyticsEvent[]
  integrations Integration[]
  
  @@map("tenants")
}

model User {
  id          String   @id @default(cuid())
  email       String   @unique
  name        String?
  role        UserRole @default(ANALYST)
  password    String?
  tenantId    String
  
  tenant      Tenant   @relation(fields: [tenantId], references: [id])
  
  @@map("users")
}

model Customer {
  id            String   @id @default(cuid())
  externalId    String?  // External system ID
  email         String
  name          String
  company       String?
  totalRevenue  Float    @default(0)
  healthScore   Float?   // 0-100 health score
  churnRisk     Float?   // 0-1 churn probability
  lastActivity  DateTime?
  tenantId      String
  
  tenant        Tenant   @relation(fields: [tenantId], references: [id])
  events        AnalyticsEvent[]
  
  @@unique([email, tenantId])
  @@map("customers")
}

enum UserRole {
  ADMIN
  MANAGER
  ANALYST
  VIEWER
}

model AnalyticsEvent {
  id          String   @id @default(cuid())
  type        String
  name        String
  timestamp   DateTime @default(now())
  data        Json?
  customerId  String?
  tenantId    String
  
  customer    Customer? @relation(fields: [customerId], references: [id])
  tenant      Tenant    @relation(fields: [tenantId], references: [id])
  
  @@map("analytics_events")
}

model Integration {
  id          String   @id @default(cuid())
  type        String
  name        String
  config      Json
  isActive    Boolean  @default(true)
  lastSync    DateTime?
  tenantId    String
  
  tenant      Tenant   @relation(fields: [tenantId], references: [id])
  
  @@map("integrations")
}
